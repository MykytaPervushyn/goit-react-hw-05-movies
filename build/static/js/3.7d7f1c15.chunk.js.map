{"version":3,"sources":["services/movies-api.js","components/PageHeading/PageHeading.js","components/PageHeading/PageHeading.module.css","views/HomeView.js"],"names":["BASE_URL","API_KEY","fetchMovies","fetch","then","response","ok","json","Promise","reject","Error","fetchMovieById","movieId","fetchCast","fetchReview","fetchQuery","query","PageHeading","text","className","s","title","module","exports","HomePage","useState","movies","setMovies","useEffect","moviesAPI","results","map","movie","original_title","to","id"],"mappings":"2IAAA,8KAAMA,EAAW,+BACXC,EAAU,mCAuBT,SAASC,IACd,OAAOC,MAAM,GAAD,OAAIH,EAAJ,uCAA2CC,IAAWG,MAChE,SAACC,GACC,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,IAAIC,MAAJ,uBAIrB,SAASC,EAAeC,GAC7B,OAAOT,MAAM,GAAD,OACPH,EADO,kBACWY,EADX,oBAC8BX,EAD9B,oBAEVG,MAAK,SAACC,GACN,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,IAAIC,MAAJ,uBAInB,SAASG,EAAUD,GACxB,OAAOT,MAAM,GAAD,OACPH,EADO,kBACWY,EADX,4BACsCX,EADtC,oBAEVG,MAAK,SAACC,GACN,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,IAAIC,MAAJ,uBAInB,SAASI,EAAYF,GAC1B,OAAOT,MAAM,GAAD,OACPH,EADO,kBACWY,EADX,4BACsCX,EADtC,oBAEVG,MAAK,SAACC,GACN,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,IAAIC,MAAJ,uBAInB,SAASK,EAAWC,GACzB,OAAOb,MAAM,GAAD,OACPH,EADO,iCAC0BC,EAD1B,iCAC0De,EAD1D,yBAEVZ,MAAK,SAACC,GACN,GAAIA,EAASC,GACX,OAAOD,EAASE,Y,gCCxEtB,2EAEe,SAASU,EAAT,GAAgC,IAATC,EAAQ,EAARA,KACpC,OAAO,oBAAIC,UAAWC,IAAEC,MAAjB,SAAyBH,M,mBCFlCI,EAAOC,QAAU,CAAC,MAAQ,6B,+HCIX,SAASC,IAEtB,MAA4BC,mBAAS,MAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA4BF,mBAAS,QAArC,6BAOA,OAJAG,qBAAU,WACRC,MAAwBzB,KAAKuB,KAC5B,IAGD,qCACE,cAAC,UAAD,CAAaT,KAAK,WAEjBQ,GACC,6BACGA,EAAOI,QAAQC,KAAI,SAAAC,GAAK,OACvB,+BACOA,EAAMC,eACP,cAAC,IAAD,CAAMC,GAAE,kBAAaF,EAAMG,IAA3B,SAAkCH,EAAMC,mBAFrCD,EAAMG","file":"static/js/3.7d7f1c15.chunk.js","sourcesContent":["const BASE_URL = 'https://api.themoviedb.org/3';\r\nconst API_KEY = '52d240069c1d754f89fa7da7b1692ef8';\r\n\r\n// async function fetchWithErrorHandling(url = '', config = {}) {\r\n//   const response = await fetch(url, config);\r\n//   return response.ok\r\n//     ? await response.json()\r\n//     : Promise.reject(new Error('Not found'));\r\n// }\r\n\r\n// export function fetchCast(movieId) {\r\n//   return fetchWithErrorHandling(`${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`);\r\n// }\r\n\r\n// export function fetchMovies() {\r\n//   return fetchWithErrorHandling(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`);\r\n// }\r\n\r\n// export function fetchMovieById(movieId) {\r\n//   return fetchWithErrorHandling(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`);\r\n// }\r\n// console.log(fetchCast())\r\n\r\n\r\nexport function fetchMovies() {\r\n  return fetch(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`).then(\r\n    (response) => {\r\n      if (response.ok) {\r\n        return response.json();\r\n      }\r\n      return Promise.reject(new Error(`no movies today`));\r\n    }\r\n  );\r\n}\r\nexport function fetchMovieById(movieId) {\r\n  return fetch(\r\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`\r\n  ).then((response) => {\r\n    if (response.ok) {\r\n      return response.json();\r\n    }\r\n    return Promise.reject(new Error(`no movies today`));\r\n  });\r\n}\r\n\r\nexport function fetchCast(movieId) {\r\n  return fetch(\r\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\r\n  ).then((response) => {\r\n    if (response.ok) {\r\n      return response.json();\r\n    }\r\n    return Promise.reject(new Error(`no movies today`));\r\n  });\r\n}\r\n\r\nexport function fetchReview(movieId) {\r\n  return fetch(\r\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\r\n  ).then((response) => {\r\n    if (response.ok) {\r\n      return response.json();\r\n    }\r\n    return Promise.reject(new Error(`no movies today`));\r\n  });\r\n}\r\n\r\nexport function fetchQuery(query) {\r\n  return fetch(\r\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&include_adult=false`\r\n  ).then((response) => {\r\n    if (response.ok) {\r\n      return response.json();\r\n    }\r\n    // return Promise.reject(new Error(`no movies with ${query} name`));\r\n  });\r\n}\r\n\r\n// function fatchMovieReview(movieId) {\r\n//   return fetch(\r\n//     `${BASE_URL}/movie/${movieId}/reviews?api_key=${key}&language=en-US&page=1`\r\n//   ).then((response) => {\r\n//     if (response.ok) {\r\n//       return response.json();\r\n//     }\r\n//     return Promise.reject(new Error(`no reviews for this movie`));\r\n//   });\r\n// }\r\n\r\n// function fatchMovieSearch(movieName) {\r\n//   return fetch(\r\n//     `${BASE_URL}/search/movie?api_key=${key}&language=en-US&query=${movieName}&page=1&include_adult=false`\r\n//   ).then((response) => {\r\n//     if (response.ok) {\r\n//       return response.json();\r\n//     }\r\n//     return Promise.reject(new Error(`no movies with name ${movieName}`));\r\n//   });\r\n// }\r\n\r\n// const api = {\r\n//   fetchMovies,\r\n//   fetchMovieById,\r\n//   fetchCast,\r\n//   // fatchMovieReview,\r\n//   // fatchMovieSearch,\r\n// };\r\n// export default api;","import s from './PageHeading.module.css';\r\n\r\nexport default function PageHeading({ text }) {\r\n  return <h1 className={s.title}>{text}</h1>;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"PageHeading_title__S34YD\"};","import { useState, useEffect } from 'react';\r\nimport { Link, useRouteMatch } from 'react-router-dom';\r\nimport * as moviesAPI from '../services/movies-api';\r\nimport PageHeading from '../components/PageHeading/PageHeading';\r\n\r\nexport default function HomePage() {\r\n//   const { url } = useRouteMatch();\r\n  const [movies, setMovies] = useState(null);\r\n  const [status, setStatus] = useState('idle');\r\n\r\n\r\n  useEffect(() => {\r\n    moviesAPI.fetchMovies().then(setMovies);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <PageHeading text=\"Movies\" />\r\n\r\n      {movies && (\r\n        <ul>\r\n          {movies.results.map(movie => (\r\n            <li key={movie.id}>\r\n                  {movie.original_title}\r\n                  <Link to={`/movies/${movie.id}`}>{movie.original_title}</Link>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n      \r\n    </>\r\n  );\r\n}"],"sourceRoot":""}