{"version":3,"sources":["components/Reviews/Reviews.js"],"names":["Reviews","useState","reviews","setReviews","movieId","useParams","slug","match","useEffect","moviesAPI","then","data","results","length","map","review","author","content","id"],"mappings":"gOAIe,SAASA,IACtB,MAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAEMC,EADWC,cAATC,KACaC,MAAM,iBAAiB,GAS1C,OANFC,qBAAU,WACNC,IAAsBL,GAASM,MAAK,SAACC,GACjCR,EAAWQ,EAAKC,cAErB,CAACR,IAEqB,IAAnBF,EAAQW,OACL,0EAIP,mCACGX,GACC,6BACGA,EAAQY,KAAI,SAAAC,GAAM,OACjB,+BACM,0CAAaA,EAAOC,UACpB,4BAAID,EAAOE,YAFRF,EAAOG","file":"static/js/reviews-page.6b3421c7.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport * as moviesAPI from '../../services/movies-api';\r\n\r\nexport default function Reviews() {\r\n  const [reviews, setReviews] = useState([]);\r\n  const { slug } = useParams();\r\n  const movieId = slug.match(/[a-zA-Z0-9]+$/)[0];\r\n\r\n\r\n  useEffect(() => {\r\n      moviesAPI.fetchReview(movieId).then((data) => {\r\n          setReviews(data.results)\r\n      });\r\n  }, [movieId]);\r\n\r\n    if (reviews.length === 0) {\r\n    return <p>We don't have any reviews for this movie.</p>;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {reviews && (\r\n        <ul>\r\n          {reviews.map(review => (\r\n            <li key={review.id}>\r\n                  <h3>Author: {review.author}</h3>\r\n                  <p>{review.content}</p>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </>\r\n  );\r\n}"],"sourceRoot":""}